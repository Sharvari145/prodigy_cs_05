from scapy.all import sniff, IP, TCP, UDP, Raw

def process_packet(packet):
    if IP in packet:
        ip_layer = packet[IP]
        src_ip = ip_layer.src
        dst_ip = ip_layer.dst
        protocol = ip_layer.proto

        print(f"Source IP: {src_ip}")
        print(f"Destination IP: {dst_ip}")
        print(f"Protocol: {protocol}", end='')

        if TCP in packet:
            print(" (TCP)")
        elif UDP in packet:
            print(" (UDP)")
        else:
            print(" (Other)")

        if Raw in packet:
            payload = packet[Raw].load
            print(f"Payload: {payload[:50]}")  # Show only the first 50 bytes
        print("-" * 60)

# Capture packets on the default interface, limit to 20 packets
sniff(prn=process_packet, count=20)
